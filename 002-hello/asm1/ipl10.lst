     1 00000000                                 ; hello-os
     2 00000000                                 ; TAB=4
     3 00000000                                  
     4  = 0000000A                              	CYLS EQU 10			;define CYLS 10, cylinder 柱面个数	
     5                                          	ORG		0x7c00			 ;  ORG指令指明了程序的装填地址，即在内存中所在的地址，
     6 00007C00                                 							;其中地址0X7c00为当时IBM和英特尔设计人员规定的
     7 00007C00                                 
     8 00007C00                                 	; 以下的记述用于标准FAT12格式的软盘
     9 00007C00 EB 4E                           	JMP		entry			; 0xeb, 0x4e
    10 00007C02 90                              	DB		0x90
    11 00007C03 48 45 4C 4C 4F 49 50 4C         	DB		"HELLOIPL"		 ; 可以自由写扇区的名字（8字节）
    12 00007C0B 0200                            	DW		512				 ; 1扇区的大小（必需要512）
    13 00007C0D 01                              	DB		1				 ; 集群的大小（必需要做一个扇区）
    14 00007C0E 0001                            	DW		1			  	 ; FATA从这里开始（一般是从第一扇区开始）
    15 00007C10 02                              	DB		2				 ; FATA的个数（必须是2）
    16 00007C11 00E0                            	DW		224				 ; 根目录区域的大小（通常为224项）
    17 00007C13 0B40                            	DW		2880			 ; 该驱动器的大小（必须要为2880扇区）
    18 00007C15 F0                              	DB		0xf0			 ; 媒体类型（必须要做0 xf0）
    19 00007C16 0009                            	DW		9				 ; FATO区域的长度（必须要做9扇区）
    20 00007C18 0012                            	DW		18				 ; 1卡车上有几个扇区
    21 00007C1A 0002                            	DW		2				 ; 头数（必须要2）
    22 00007C1C 00000000                        	DD		0				 ; 因为没有使用分区，所以这里一定是0
    23 00007C20 00000B40                        	DD		2880			 ; 再写一次一个寄存器大小
    24 00007C24 00 00 29                        	DB		0,0,0x29		 ; 虽然不太明白，但是放在?个价?上就好了
    25 00007C27 FFFFFFFF                        	DD		0xffffffff		 ; 大概卷序列号
    26 00007C2B 48 45 4C 4C 4F 2D 4F 53 20 20   	DB		"HELLO-OS   "	 ; 磁盘名称（11字节）
       00007C35 20 
    27 00007C36 46 41 54 31 32 20 20 20         	DB		"FAT12   "		 ; 格式名称（8字节）
    28 00007C3E 00 00 00 00 00 00 00 00 00 00   	RESB	18				 ; 先放18个字节
       00007C48 00 00 00 00 00 00 00 00 
    29 00007C50                                 
    30 00007C50                                 	; 程序核心
    31 00007C50                                 entry:
    32 00007C50 B8 0000                         	MOV		AX,0			 ; 初始化寄存器
    33 00007C53 8E D0                           	MOV		SS,AX			 ;;SS-stack segment,堆栈段
    34 00007C55 BC 7C00                         	MOV		SP,0x7c00		 ;;SP-stack pointer,栈指针寄存器
    35 00007C58 8E D8                           	MOV		DS,AX			 ;;DS-data segment,数据段
    36 00007C5A                                 	
    37 00007C5A                                 ; 加载软盘内扇区的数据到指定地址处
    38 00007C5A B8 0820                         	mov ax,0x0820
    39 00007C5D 8E C0                           	mov es,ax	; es:bx 为读扇区后放入的地址，实际地址为es*16+bx
    40 00007C5F B5 00                           	mov ch,0	; 柱面号，共80个
    41 00007C61 B6 00                           	mov dh,0	; 磁头号，0正面，1反面
    42 00007C63 B1 02                           	mov cl,2	; 扇区号，18个，第一个放IPL引导程序
    43 00007C65                                 	
    44 00007C65                                 readloop:
    45 00007C65 BE 0000                         	mov si,0	; 用作计数器
    46 00007C68                                 retry:		; 每次读取一个扇区，重复读取五次，直到成功读取
    47 00007C68 B4 02                           	mov ah,0x02	; 读扇区功能
    48 00007C6A B0 01                           	mov al,1	; 读取扇区的数量
    49 00007C6C BB 0000                         	mov bx,0	; 目标地址
    50 00007C6F B2 00                           	mov dl,0x00	; 驱动器号，目前只有一个
    51 00007C71 CD 13                           	int 0x13	; 中断。读取成功 CF=0,否则CF=1，错误码再AH中
    52 00007C73 73 10                           	jnc	next	; 读取成功，jnc，cf为零时跳转
    53 00007C75 83 C6 01                        	add si,1	; 失败次数+1
    54 00007C78 83 FE 05                        	cmp si,5	; 是否失败了5次
    55 00007C7B 73 3A                           	jae error	; 大于等于跳转
    56 00007C7D B4 00                           	mov ah,0x00
    57 00007C7F B2 00                           	mov dl,0x00	; 
    58 00007C81 CD 13                           	int 0x13	; 复位软盘状态，读取下一次
    59 00007C83 EB E3                           	jmp retry	
    60 00007C85                                 	
    61 00007C85                                 next:
    62 00007C85 8C C0                           	mov ax,es
    63 00007C87 05 0020                         	add ax,0x0020 ; (0x20*16=512B)
    64 00007C8A 8E C0                           	mov es,ax	; 目的地址递增512，一个扇区512B
    65 00007C8C 80 C1 01                        	add cl,1	; 扇区号+1
    66 00007C8F 80 F9 12                        	cmp cl,18
    67 00007C92 76 D1                           	jbe readloop ; 如果小于等于18，继续读取
    68 00007C94 B1 00                           	mov cl,0
    69 00007C96 80 C6 01                        	add dh,1	; 读取反面
    70 00007C99 80 FE 02                        	cmp dh,2
    71 00007C9C 72 C7                           	jb readloop ; dh<2
    72 00007C9E B6 00                           	mov dh,0
    73 00007CA0 80 C5 01                        	add ch,1
    74 00007CA3                                 	
    75 00007CA3 B0 3C                           	mov al,0x3C	;	测试
    76 00007CA5 B4 0E                           	mov ah,0x0e
    77 00007CA7 BB 000F                         	mov bx,15
    78 00007CAA CD 10                           	int 0x10
    79 00007CAC                                 	
    80 00007CAC 80 FD 0A                        	cmp ch,CYLS	;
    81 00007CAF 72 B4                           	jb readloop ; 如果小于要读取的柱面继续读
    82 00007CB1                                 
    83 00007CB1                                 readFinish:
    84 00007CB1 E9 454C                         	jmp 0xc200 ;0x8000+0x4200;
    85 00007CB4                                 			   ;将文件拷贝到img后，0x4200为文件的内容地址
    86 00007CB4                                 
    87 00007CB4                                 fin:
    88 00007CB4 F4                              	HLT						 ; 让CPU停止，等待指令
    89 00007CB5 EB FD                           	JMP		fin				 ; 无限循环	
    90 00007CB7                                 
    91 00007CB7                                 error:
    92 00007CB7 BE 7CCC                         	MOV		SI,msg			 ;;SI-source index,源变址寄存器
    93 00007CBA                                 	
    94 00007CBA                                 putloop:
    95 00007CBA 8A 04                           	MOV		AL,[SI]
    96 00007CBC 83 C6 01                        	ADD		SI,1			 ;让SI加1
    97 00007CBF 3C 00                           	CMP		AL,0
    98 00007CC1 74 F1                           	JE		fin
    99 00007CC3 B4 0E                           	MOV		AH,0x0e			 ; 指明一个文字
   100 00007CC5 BB 000F                         	MOV		BX,15			 ; 指定字符颜色
   101 00007CC8 CD 10                           	INT		0x10			 ; 调用显卡BIOS,16号中断
   102 00007CCA EB EE                           	JMP		putloop
   103 00007CCC                                 
   104 00007CCC                                 
   105 00007CCC                                 msg:
   106 00007CCC 0A 0A                           	DB		0x0a, 0x0a		 ; 换行两次
   107 00007CCE 6C 6F 61 64 20 65 72 72 6F 72   	DB		"load error"
   108 00007CD8 0A                              	DB		0x0a			 ; 换行
   109 00007CD9 00                              	DB		0
   110 00007CDA                                 
   111 00007CDA 00 00 00 00 00 00 00 00 00 00   	RESB	0x7dfe-$		 ; 到0x7dfe在0x00中填入的命令
       00007CE4 00 00 00 00 00 00 00 00 00 00 
       00007CEE 00 00 00 00 00 00 00 00 00 00 
       00007CF8 00 00 00 00 00 00 00 00 00 00 
       00007D02 00 00 00 00 00 00 00 00 00 00 
       00007D0C 00 00 00 00 00 00 00 00 00 00 
       00007D16 00 00 00 00 00 00 00 00 00 00 
       00007D20 00 00 00 00 00 00 00 00 00 00 
       00007D2A 00 00 00 00 00 00 00 00 00 00 
       00007D34 00 00 00 00 00 00 00 00 00 00 
       00007D3E 00 00 00 00 00 00 00 00 00 00 
       00007D48 00 00 00 00 00 00 00 00 00 00 
       00007D52 00 00 00 00 00 00 00 00 00 00 
       00007D5C 00 00 00 00 00 00 00 00 00 00 
       00007D66 00 00 00 00 00 00 00 00 00 00 
       00007D70 00 00 00 00 00 00 00 00 00 00 
       00007D7A 00 00 00 00 00 00 00 00 00 00 
       00007D84 00 00 00 00 00 00 00 00 00 00 
       00007D8E 00 00 00 00 00 00 00 00 00 00 
       00007D98 00 00 00 00 00 00 00 00 00 00 
       00007DA2 00 00 00 00 00 00 00 00 00 00 
       00007DAC 00 00 00 00 00 00 00 00 00 00 
       00007DB6 00 00 00 00 00 00 00 00 00 00 
       00007DC0 00 00 00 00 00 00 00 00 00 00 
       00007DCA 00 00 00 00 00 00 00 00 00 00 
       00007DD4 00 00 00 00 00 00 00 00 00 00 
       00007DDE 00 00 00 00 00 00 00 00 00 00 
       00007DE8 00 00 00 00 00 00 00 00 00 00 
       00007DF2 00 00 00 00 00 00 00 00 00 00 
       00007DFC 00 00 
   112 00007DFE                                 
   113 00007DFE 55 AA                           	DB		0x55, 0xaa